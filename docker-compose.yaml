version: "3.8"
services:
  laravel_app:
    container_name: laravel_app
    extra_hosts:
     - "host.docker.internal:host-gateway"
    build:
      context: .
      dockerfile: ./docker/php/Dockerfile
    expose:
      - 9000
    volumes:
      - .:/usr/src/app
      - ./public:/usr/src/app/public
    depends_on:
      - laravel_db
    networks:
      - laravel_network

  laravel_nginx:
    container_name: laravel_nginx
    build:
      context: .
      dockerfile: ./docker/nginx/Dockerfile
    volumes:
    - ./public:/usr/src/app/public
    ports:
      - 8080:80
    depends_on:
      - laravel_app
    environment:
      NGINX_FPM_HOST: laravel_app
      NGINX_ROOT: /usr/src/app/public
    networks:
      - laravel_network

  laravel_db:
    container_name: laravel_db
    image: 'mysql/mysql-server:8.0'
    ports:
      - '${FORWARD_DB_PORT:-3306}:3306'
    environment:
      MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
      MYSQL_ROOT_HOST: "%"
      MYSQL_DATABASE: '${DB_DATABASE}'
      MYSQL_USER: '${DB_USERNAME}'
      MYSQL_PASSWORD: '${DB_PASSWORD}'
      MYSQL_ALLOW_EMPTY_PASSWORD: 1
    volumes:
      - 'mysql:/var/lib/mysql'
      - './vendor/laravel/sail/database/mysql/create-testing-database.sh:/docker-entrypoint-initdb.d/10-create-testing-database.sh'
    networks:
      - laravel_network

  laravel_redis:
    container_name: laravel_redis
    image: redis:latest
    ports:
      - 6379:6379
    volumes:
       - 'storeredis:/data'
    networks:
      - laravel_network

networks:
  laravel_network:
    driver: bridge

volumes:
  mysql:
    driver: local
  storeredis:
    driver: local
